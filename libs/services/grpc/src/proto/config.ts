/**
 * This file is auto-generated by nestjs-proto-gen-ts
 */

import { Observable } from 'rxjs';
import { Metadata } from '@grpc/grpc-js';

export namespace config {
  // ConfigService provides methods to retrieve configuration settings.
  export interface ConfigService {
    getActiveLanguages(
      data: GetActiveLanguagesRequest,
      metadata?: Metadata,
      ...rest: any[]
    ): Observable<GetActiveLanguagesResponse>;
    getServiceTranlations(
      data: GetServiceTranlationsRequest,
      metadata?: Metadata,
      ...rest: any[]
    ): Observable<GetServiceTranlationsResponse>;
    getBranding(data: GetBrandingRequest, metadata?: Metadata, ...rest: any[]): Observable<GetBrandingResponse>;
  }
  // tslint:disable-next-line:no-empty-interface
  export interface GetActiveLanguagesRequest {}
  export interface GetActiveLanguagesResponse {
    languages?: config.ActiveLanguage[];
  }
  export interface ActiveLanguage {
    code?: string;
    title?: string;
    isDefault?: boolean;
  }
  // tslint:disable-next-line:no-empty-interface
  export interface GetBrandingRequest {}
  export interface GetBrandingResponse {
    companyName?: string;
    projectName?: string;
    primaryColor?: string;
    primaryColorHover?: string;
    primaryColorPressed?: string;
    accentColor?: string;
    accentColorHover?: string;
    accentColorPressed?: string;
  }
  export interface GetServiceTranlationsRequest {
    service?: string;
    language?: string;
  }
  export interface GetServiceTranlationsResponse {
    translations?: config.Translation[];
  }
  export interface Translation {
    key?: string;
    value?: string;
  }
}
