/**
 * This file is auto-generated by nestjs-proto-gen-ts
 */

import { Observable } from 'rxjs';
import { Metadata } from '@grpc/grpc-js';

export namespace file {
  export interface FileService {
    doesFileExist(data: DoesFileExistRequest, metadata?: Metadata, ...rest: any[]): Observable<DoesFileExistResponse>;
    uploadFile(data: UploadFileRequest, metadata?: Metadata, ...rest: any[]): Observable<UploadFileResponse>;
    getFile(data: GetFileRequest, metadata?: Metadata, ...rest: any[]): Observable<GetFileResponse>;
    deleteFile(data: DeleteFileRequest, metadata?: Metadata, ...rest: any[]): Observable<DeleteFileResponse>;
  }
  export interface DoesFileExistRequest {
    key?: string;
  }
  export interface DoesFileExistResponse {
    exists?: boolean;
  }
  export interface UploadFileRequest {
    key?: string;
    body?: Uint8Array;
    isPublic?: boolean;
    metadata?: { [key: string]: string };
  }
  // tslint:disable-next-line:no-empty-interface
  export interface UploadFileResponse {}
  export interface GetFileRequest {
    key?: string;
  }
  export interface GetFileResponse {
    body?: Uint8Array;
  }
  export interface DeleteFileRequest {
    key?: string;
  }
  // tslint:disable-next-line:no-empty-interface
  export interface DeleteFileResponse {}
}
