volumes:
  goup-dind:
  goup-minio:
  goup-mongo-shard-db:
  goup-mongo-shard-config:
  goup-mongo-config-db:
  goup-mongo-config-config:
  goup-mongo-route-db:
  goup-mongo-route-config:
  goup-elastic:
  goup-graylog:
  goup-rabbitmq:
  goup-redis:

networks:
  local_bridge:
    driver: bridge
    name: goup-network
    ipam:
      config:
        - subnet: 172.16.0.0/16
          gateway: 172.16.0.1

x-common: &common_settings
  volumes:
    - /etc/localtime:/etc/localtime:ro
    - /etc/timezone:/etc/timezone:ro
  dns:
    - 172.16.1.2
    - 203.162.4.191
    - 203.113.131.1
  labels:
    - 'project=goup'

services:
  workspace:
    <<: *common_settings
    container_name: workspace
    privileged: true
    expose:
      - 80
      - 443
    build: ./workspace
    environment:
      - NX_DEMON=true
    volumes:
      - ../:/goup
      - goup-dind:/var/lib/docker
    networks:
      local_bridge:
        ipv4_address: 172.16.1.1
    healthcheck:
      test: ['CMD-SHELL', 'curl -f http://localhost:80 || exit 1']
      interval: 30s
      timeout: 10s
      retries: 5

  dns:
    <<: *common_settings
    container_name: dns
    image: 4km3/dnsmasq:2.85-r2-alpine-3.14
    cap_add:
      - NET_ADMIN
    command: >
      --address=/lacolhost.com/172.16.1.3
      --address=/.lacolhost.com/172.16.1.3
      --cache-size=10240
      --server=203.162.4.191
      --server=210.245.24.20
    networks:
      local_bridge:
        ipv4_address: 172.16.1.2
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 6M
    healthcheck:
      test: ['CMD-SHELL', 'pgrep dnsmasq || exit 1']
      interval: 30s
      timeout: 10s
      retries: 5

  nginx:
    <<: *common_settings
    image: nginx:alpine
    container_name: nginx
    ports:
      - '80:80'
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/http-proxy-header.conf:/etc/nginx/http-proxy-header.conf:ro
      - ./nginx/http-server.conf:/etc/nginx/http-server.conf:ro
    networks:
      local_bridge:
        ipv4_address: 172.16.1.3
    deploy:
      resources:
        limits:
          memory: 64M
    healthcheck:
      test: ['CMD-SHELL', 'curl -f http://localhost:80 || exit 1']
      interval: 30s
      timeout: 10s
      retries: 5

  minio:
    <<: *common_settings
    container_name: minio
    image: minio/minio
    command: server /data --address ":9000" --console-address ":9001" --quiet
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
      MINIO_BROWSER_REDIRECT: false
    volumes:
      - goup-minio:/data
    networks:
      local_bridge:
        ipv4_address: 172.16.1.4
    deploy:
      resources:
        limits:
          memory: 96M
    healthcheck:
      test: ['CMD-SHELL', 'curl -f http://localhost:9000/minio/health/live || exit 1']
      interval: 30s
      timeout: 10s
      retries: 5

  mongo-config:
    <<: *common_settings
    build:
      context: ./mongod
      dockerfile: Dockerfile
      args:
        MONGO_VERSION: 4.4
    container_name: mongo-config
    command: mongod --configsvr --port 27017 --replSet configReplSet --quiet --bind_ip_all
    environment:
      - REPL_NAME=configReplSet
      - NODE_HOST=mongo-config
    volumes:
      - goup-mongo-config-db:/data/db
      - goup-mongo-config-config:/data/configdb
    networks:
      local_bridge:
        ipv4_address: 172.16.1.11
    healthcheck:
      test: ['CMD', 'mongo', '--eval', "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 96M

  mongo-shard:
    <<: *common_settings
    build:
      context: ./mongod
      dockerfile: Dockerfile
      args:
        MONGO_VERSION: 4.4
    container_name: mongo-shard
    command: mongod --shardsvr --port 27017 --replSet shardReplSet --quiet --bind_ip_all
    volumes:
      - goup-mongo-shard-db:/data/db
      - goup-mongo-shard-config:/data/configdb
    environment:
      - REPL_NAME=shardReplSet
      - NODE_HOST=mongo-shard
    networks:
      local_bridge:
        ipv4_address: 172.16.1.12
    healthcheck:
      test: ['CMD', 'mongo', '--eval', "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 96M

  mongo-router:
    <<: *common_settings
    container_name: mongo-router
    build:
      context: ./mongos
      dockerfile: Dockerfile
      args:
        MONGO_VERSION: 4.4
    command: mongos --port 27017 --configdb configReplSet/mongo-config:27017 --quiet --bind_ip_all
    environment:
      - SHARD_LIST=shardReplSet/mongo-shard:27017
    volumes:
      - goup-mongo-route-db:/data/db
      - goup-mongo-route-config:/data/configdb
    networks:
      local_bridge:
        ipv4_address: 172.16.1.5
    extra_hosts:
      - 'mongo-router:172.16.1.5'
      - 'mongo-config:172.16.1.11'
      - 'mongo-shard:172.16.1.12'
    healthcheck:
      test: ['CMD', 'mongo', '--eval', "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 32M

  mongodb-admin:
    <<: *common_settings
    container_name: mongodb-admin
    image: mongo-express
    environment:
      - ME_CONFIG_OPTIONS_FULLWIDTH_LAYOUT=true
      - ME_CONFIG_BASICAUTH_ENABLED=false
      - ME_CONFIG_BASICAUTH=false
      - ME_CONFIG_MONGODB_URL=mongodb://mongodb.lacolhost.com
    networks:
      local_bridge:
        ipv4_address: 172.16.1.6
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 32M
    healthcheck:
      test: ['CMD-SHELL', 'curl -f http://localhost:8081/status || exit 1']
      interval: 30s
      timeout: 10s
      retries: 5

  redis:
    <<: *common_settings
    container_name: redis
    image: redis:6.2-alpine
    command: ['sh', '-c', 'redis-server --maxmemory 60mb --maxmemory-policy allkeys-lru']
    volumes:
      - goup-redis:/data
    networks:
      local_bridge:
        ipv4_address: 172.16.1.7
    deploy:
      resources:
        limits:
          memory: 68M
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 30s
      timeout: 10s
      retries: 5

  redis-admin:
    <<: *common_settings
    container_name: redis-admin
    image: erikdubbelboer/phpredisadmin
    environment:
      REDIS_1_HOST: redis.lacolhost.com
      REDIS_1_NAME: local
    networks:
      local_bridge:
        ipv4_address: 172.16.1.8
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 16M
    healthcheck:
      test: ['CMD-SHELL', 'curl -f http://localhost || exit 1']
      interval: 30s
      timeout: 10s
      retries: 5

  rabbitmq:
    <<: *common_settings
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    volumes:
      - ./rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf:ro
      - goup-rabbitmq:/var/lib/rabbitmq
    networks:
      local_bridge:
        ipv4_address: 172.16.1.9
    deploy:
      resources:
        limits:
          memory: 96M
    command: >
      rabbitmq-server
         --log_levels.default=none
    healthcheck:
      test: ['CMD-SHELL', 'rabbitmq-diagnostics -q ping']
      interval: 30s
      timeout: 10s
      retries: 5

  mailhog:
    <<: *common_settings
    container_name: mailhog
    build: ./mailhog
    networks:
      local_bridge:
        ipv4_address: 172.16.1.10
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 16M
    healthcheck:
      test: ['CMD-SHELL', 'curl -f http://localhost:8025 || exit 1']
      interval: 30s
      timeout: 10s
      retries: 5
